// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WebApp
const CONFIG = {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL —Å–µ—Ä–≤–µ—Ä–∞
    async getServerUrl() {
        // –ï—Å–ª–∏ –º—ã –≤ Telegram WebApp, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å IP –æ—Ç –±–æ—Ç–∞
        if (window.Telegram && window.Telegram.WebApp) {
            try {
                // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å IP –æ—Ç –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤
                const knownServers = [
                    'http://localhost:5000',
                    'http://92.243.182.46:5000',
                    'https://your-production-domain.com'
                ];
                
                for (const server of knownServers) {
                    try {
                        const response = await fetch(`${server}/server/info`, {
                            method: 'GET',
                            timeout: 3000
                        });
                        
                        if (response.ok) {
                            const data = await response.json();
                            console.log('üåê Server info received:', data);
                            return data.server_url;
                        }
                    } catch (e) {
                        console.log(`‚ö†Ô∏è Failed to connect to ${server}:`, e.message);
                        continue;
                    }
                }
                
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∏ –∫ –æ–¥–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
                console.warn('‚ö†Ô∏è Could not connect to any known server, using fallback');
                return 'http://92.243.182.46:5000';
                
            } catch (error) {
                console.error('‚ùå Error getting server info:', error);
                return 'http://92.243.182.46:5000';
            }
        }
        
        // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
            return 'http://localhost:5000';
        }
        
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä
        return 'http://92.243.182.46:5000';
    },
    
    // URL –¥–ª—è API
    async getApiUrl() {
        const serverUrl = await this.getServerUrl();
        return `${serverUrl}/webapp/data`;
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
    environments: {
        local: {
            serverUrl: 'http://localhost:5000',
            apiUrl: 'http://localhost:5000/webapp/data'
        },
        development: {
            serverUrl: 'http://92.243.182.46:5000',
            apiUrl: 'http://92.243.182.46:5000/webapp/data'
        },
        production: {
            serverUrl: 'https://your-production-domain.com',
            apiUrl: 'https://your-production-domain.com/webapp/data'
        }
    },
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    forceEnvironment: null, // 'local', 'development', 'production' –∏–ª–∏ null –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    
    // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    async getCurrentConfig() {
        if (this.forceEnvironment && this.environments[this.forceEnvironment]) {
            return this.environments[this.forceEnvironment];
        }
        
        const serverUrl = await this.getServerUrl();
        return {
            serverUrl: serverUrl,
            apiUrl: `${serverUrl}/webapp/data`
        };
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = CONFIG;
} 